"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
   И укажите сложность ф-ций для заполнения.
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему
   И укажите сложность ф-ций для операций.

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
"""
from time import time


def wrapper(fun):
    def timer():
        start = time()
        fun()
        end = time()
        print(end - start)

    return timer


def filllist():
    ls = []
    for i in range(10 ** 5):
        ls.append(i)#O(1)


def filldict():
    dc = {}
    for i in range(10 ** 5):
        dc[i] = i#O(1)


filllist = wrapper(filllist)
filldict = wrapper(filldict)
print("Заполнение листа: ")
filllist()
print("Заполнение словоря: ")
filldict()
"""a)
Заполнение листа: 
0.011947870254516602
Заполнение словоря: 
0.011995792388916016
Вывод: Скорость выполнения одинакова т.к. O - нотации равны"""


def fill_list_and_pop():
    ls = []
    for i in range(10 ** 5):
        ls.append(i)#O(1)
    for i in range(10 ** 5):
        ls.pop()#O(1)



def fill_dict_and_pop():
    dc = {}
    for i in range(10 ** 5):
        dc[i] = i#O(1)
    print(type(dc))
    for i in range(10 ** 5):
        dc.pop(i)#O(1)


fill_list_and_pop = wrapper(fill_list_and_pop)
fill_dict_and_pop = wrapper(fill_dict_and_pop)
print("Заполнение и удаление листа: ")
fill_list_and_pop()
print("Заполнение и удаление словоря: ")
fill_dict_and_pop()
"""b)
Заполнение и удаление листа: 
0.01396036148071289
Заполнение и удаление словоря: 
0.02194070816040039
Вывод: Заполнение и удаление словоря проводилось в 1.5 дольше чем листа хотя O нотации равны """